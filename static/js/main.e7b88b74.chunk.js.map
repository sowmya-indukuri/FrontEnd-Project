{"version":3,"sources":["InputBox.js","TableBox.js","GraphBox.js","FilterBox.js","News.js","wave.mp4","App.js","reportWebVitals.js","index.js"],"names":["InputBox","state","inputArray","getResults","s","v","a","console","log","stockcode","document","getElementById","value","startDate","Math","round","Date","getTime","includes","alert","val","length","axios","get","params","symbol","token","resp_data_table","setState","concat","data","c","h","l","o","pc","t","props","getGraphResults","response","toUpperCase","className","type","id","aria-label","placeholder","onKeyUp","this","convertToUppercase","onClick","React","Component","TableBox","currency","tableDataDOM","table_Values","map","table","index","JSON","stringify","split","replace","toFixed","show_Table","sortTable","GraphBox","Data","pP","currentStockCode","alter_Graph","endDate","dates","resolution","from","to","then","i","unix_time","x","time","moment","unix","format","push","y","lowOrHighColor","text","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","catch","error","String","slice","height","width","options","layout","padding","right","responsive","maintainAspectRatio","scales","xAxes","gridLines","display","ticks","scaleLabel","labelString","fontColor","fontfamily","fontSize","yAxes","legend","position","FilterBox","filter","stock_code","querySelector","currentTime","filterData","DOM","dict_codes","item","stock_value","defaultValue","News","arr1","startmm","month","arr2","endmm","headlines","headline","behavior","direction","href","App","videoSource","video","graphData","showFilterDOM","showFilterData","showGraph","code","graph_data","autoPlay","loop","muted","src","tabindex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e7b88b74.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport './InputBox.css';\r\n\r\nclass InputBox extends React.Component{\r\n\r\n    state = {\r\n        inputArray: []\r\n\r\n    };\r\n\r\n    getResults = async(s, v) => {\r\n        console.log(\"123\");\r\n        var stockcode;\r\n      \r\n        stockcode = document.getElementById(\"stockcode\").value;\r\n\r\n        let startDate = Math.round(new Date().getTime() / 1000);\r\n        let endDate = startDate - (72 * 3600);\r\n\r\n        if(this.state.inputArray.includes(stockcode)){\r\n            alert(\"Already Exists\");\r\n            document.getElementById(\"stockcode\").value = \"\";\r\n\r\n        }\r\n        else{\r\n                var val = document.getElementById(\"stockcode\").value;\r\n                if(val === '' || val.length>4){\r\n                    alert(\"Please enter correct code\");\r\n                }\r\n                else{\r\n                    var resp_data_table = await axios.get('https://finnhub.io/api/v1/quote', {\r\n                        params: {\r\n                            symbol: stockcode,\r\n                            token: 'bu5pnnf48v6qku34c7vg'\r\n                        }\r\n                    });\r\n\r\n                    // var resp_data_graph = await axios.get('https://finnhub.io/api/v1/stock/candle',{\r\n                    //     params:{\r\n                    //         symbol: stockcode,\r\n                    //         resolution: 5,\r\n                    //         from: endDate,\r\n                    //         to: startDate,\r\n                    //         token: 'bu5pnnf48v6qku34c7vg'\r\n\r\n                    //     }\r\n                    // });\r\n\r\n                    this.setState({inputArray: this.state.inputArray.concat(stockcode)},\r\n                    () => {\r\n                        if(resp_data_table.data.c == 0 && resp_data_table.data.h == 0 && resp_data_table.data.l == 0 && resp_data_table.data.o == 0 && resp_data_table.data.pc == 0 && resp_data_table.data.t == 0){\r\n                            this.props.getGraphResults(\"no_data\", '');\r\n                            console.log(\"no data\");\r\n                            // add even for getresults\r\n                        }\r\n                        else{\r\n                            // this.props.getGraphResults(true, {stockcode: stockcode, response: resp_data_graph.data});\r\n                            // console.log(resp_data_graph.data);\r\n\r\n                            // this.props.getResults(resp_data_table.data);\r\n\r\n                            resp_data_table.data.stockcode = stockcode;\r\n                            this.props.getResults(true, {stockcode: stockcode, response: resp_data_table.data});\r\n                            console.log(resp_data_table.data)\r\n                        }\r\n                        document.getElementById(\"stockcode\").value = \"\";\r\n                    });\r\n\r\n                }\r\n        }\r\n\r\n        \r\n\r\n\r\n       \r\n        \r\n    };\r\n\r\n    convertToUppercase() {\r\n        var val = document.getElementById(\"stockcode\");\r\n        val.value = val.value.toUpperCase();\r\n        // var val = React.findDOMNode(this.ref.stockcode);\r\n        // val.value = val.value.toUpperCase();\r\n\r\n\r\n\r\n    };\r\n    render(){\r\n        return (\r\n            \r\n                <div className=\"form-group\">\r\n                    {/* <label for=\"stockcode\" class=\"visuallyhidden\">Stock Code </label> */}\r\n                    <input className=\"form-control\" type=\"text\" id=\"stockcode\" aria-label=\"Search\"  placeholder=\"Enter Stock Code (e.g. AAPL)\"  onKeyUp={ this.convertToUppercase}></input>\r\n                    <button className=\"btn btn-dark inputbutton\" aria-label=\"Search\" type=\"submit\" onClick={ ()=> this.getResults(true,'')}><i className=\"fa fa-search\"></i></button>\r\n\r\n               \r\n\r\n                </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default InputBox;","import React from 'react';\r\n// import '../css/styles.css';\r\n// import '../css/TableDataCard.css';\r\nimport './TableBox.css';\r\n\r\nclass TableBox extends React.Component{\r\n\r\n    state = {\r\n        currency: '$'\r\n    };\r\n\r\n    // sortTable = (n) => {\r\n    //     var table, rows, switching, i, x, y, shouldSwitch, order, switchcount = 0;\r\n    //     table = document.getElementsByTagName(\"tbody\")[0];\r\n    //     switching = true;\r\n    //     // var text = document.getElementById(thid).innerHTML;\r\n    //     // text = text.substring(0,text.length-1); \r\n        \r\n    //     order = \"asc\";\r\n    //     console.log(table.childNodes.length);\r\n    //     console.log(table.childNodes)\r\n    //     // var rowsRangeVal = document.getElementById(\"rowsrange\").value;\r\n\r\n\r\n\r\n    \r\n    \r\n    //     while (switching) {\r\n            \r\n    //         switching = false;\r\n    //         rows = table.childNodes.length;\r\n            \r\n    //         for (i = 0; i < (rows - 1); i++) {\r\n                \r\n    //             shouldSwitch = false;\r\n                \r\n    //             x = rows[i].getElementsByTagName(\"TD\")[n];\r\n    //             console.log(x)\r\n                \r\n    //             y = rows[i + 1].getElementsByTagName(\"TD\")[n];\r\n    //             console.log(y)\r\n            \r\n            \r\n    //             if (order == \"asc\") {\r\n    //                 if ((+x.innerHTML) > (+y.innerHTML)) {\r\n                \r\n    //                     shouldSwitch= true;\r\n    //                     break;\r\n    //                 }\r\n    //             } else if (order == \"desc\") {\r\n    //                 if ((+x.innerHTML) < (+y.innerHTML)) {\r\n                    \r\n    //                     shouldSwitch = true;\r\n    //                     break;\r\n    //                 }\r\n    //             }\r\n                \r\n                \r\n    //         }\r\n    //         if (shouldSwitch) {\r\n        \r\n    //         rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\r\n    //         switching = true;\r\n            \r\n    //         switchcount ++;      \r\n    //         } else {\r\n            \r\n    //         if (switchcount == 0 && order == \"asc\") {\r\n    //             order = \"desc\";\r\n    //             switching = true;\r\n    //         }\r\n    //         }\r\n    //     }\r\n  \r\n        \r\n    // }\r\n\r\n    \r\n    render(){\r\n        let tableDataDOM = '';\r\n        console.log(\"test\")\r\n\r\n        // @dom: show all values in the table\r\n        tableDataDOM = this.props.table_Values.map((table, index) => {\r\n            console.log(this.props.table_Values);\r\n            console.log(index);\r\n\r\n            // @condition: check if there is a viable response from the API call (e.g. AAAA doesn't exist)\r\n            if(table !== \"Symbol not supported\"){\r\n                return (\r\n                    <tr key={ index }>\r\n                        <td>{table.stockcode}</td>\r\n                        <td>{ JSON.stringify(new Date(table.t * 1000)).split('T')[0].replace('\"', '') }</td>\r\n    \r\n                        {/* Open Price */}\r\n                        <td className=\"openrow\">{ this.state.currency + table.o.toFixed(2) }</td>\r\n                        \r\n                        {/* Low Price */}\r\n                        <td className=\"lowrow\">{ this.state.currency + table.l.toFixed(2) }</td>\r\n    \r\n                        {/* High Price */}\r\n                        <td className=\"highrow\">{ this.state.currency + table.h.toFixed(2) }</td>\r\n    \r\n                        {/* Previous Close Price */}\r\n                        <td className=\"pcloserow\">{ this.state.currency + table.pc.toFixed(2) }</td>\r\n                        \r\n                        {/* Close Price */}\r\n                        <td className=\"closerow\">{ this.state.currency + table.c.toFixed(2) }</td>\r\n                        \r\n                        {/* PC/C percentage */}\r\n                        <td className=\"lastrow\">{ (100 - (table.pc.toFixed(2)/table.c.toFixed(2))*100).toFixed(2) + '%' }</td>\r\n                    </tr>\r\n                );\r\n            };\r\n        });\r\n\r\n\r\n        return (\r\n            \r\n            <div className=\"item-table\">\r\n                <h5 className=\"table-heading\">Your Companies Latest Stock values:</h5>\r\n                    { \r\n                        this.props.show_Table \r\n                        ?\r\n                    \r\n                        <table className=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                {/* <th scope=\"col\">Stock Code</th>\r\n                                <th scope=\"col\">Last Updated Data</th>\r\n                                <th scope=\"col\">Open Price</th>\r\n                                <th scope=\"col\">Low Price</th>\r\n                                <th scope=\"col\">High Price</th>\r\n                                <th scope=\"col\">Previous Close Price</th>\r\n                                <th scope=\"col\">Current Price</th>\r\n                                <th scope=\"col\">% From Yesterday</th> */}\r\n                                <th>Stock Code</th>\r\n                                <th>Last Updated Data</th>\r\n                                <th onClick={()=> this.sortTable(2)}>Open Price</th>\r\n                                <th>Low Price</th>\r\n                                <th>High Price</th>\r\n                                <th>Previous Close Price</th>\r\n                                <th>Current Price</th>\r\n                                <th>% From Yesterday</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                { tableDataDOM }\r\n                            </tbody>\r\n                        </table>\r\n                        :\r\n                        <p></p>\r\n                    }\r\n            </div>\r\n           \r\n        );\r\n    };\r\n};\r\n\r\nexport default TableBox;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from \"react-chartjs-2\";\r\n// import Plot from 'react-plotly.js';\r\nimport './GraphBox.css';\r\nimport moment from 'moment';\r\n// import { useAlert } from 'react-alert';\r\nclass GraphBox extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          Data:{}\r\n        };}\r\n    componentDidUpdate(pP){\r\n        if(pP.currentStockCode != this.props.currentStockCode){\r\n            // console.log(this.props.currentStockCode);\r\n            // console.log(this.props.alter_Graph);\r\n            if (this.props.alter_Graph===false){\r\n              var startDate = Math.round(new Date().getTime() / 1000);\r\n              var endDate = startDate - (72 * 3600);\r\n              \r\n            }\r\n            else{\r\n              var startDate = this.props.dates.endDate;\r\n              var endDate = this.props.dates.startDate;\r\n            }\r\n            const pointerToThis = this;\r\n          axios.get('https://finnhub.io/api/v1/stock/candle',{\r\n              \r\n            params:{\r\n                symbol: this.props.currentStockCode,\r\n                resolution: 5,\r\n                from: endDate,\r\n                to: startDate,\r\n                token: 'bu5pnnf48v6qku34c7vg'\r\n\r\n            }})\r\n            .then((response) => {\r\n              console.log(response);\r\n              // console.log({ JSON.stringify(new Date(response.data.t * 1000)).split('T')[0].replace('\"', '') });\r\n              // console.log(response);\r\n              var unix_time = response.data.t;\r\n              var i;\r\n              var x=[];\r\n              // console.log(unix_time);\r\n                for (i = 0; i < unix_time.length; i++) {\r\n                  var time = moment.unix(unix_time[i]).format(\"YYYY-MM-DD HH:mm\");\r\n                  x.push(time)\r\n                }\r\n              var y = response.data.c;\r\n              // console.log(typeof(y[0]));\r\n              var lowOrHighColor = y[0] < y[y.length - 1] \r\n                ? '#81b737' : '#d54f4f';\r\n              this.setState({\r\n                  symbol: this.props.currentStockCode,\r\n                  text: 'in the last 72 Hours',\r\n                  Data: {\r\n                    labels: x,\r\n                    datasets: [\r\n                      {\r\n                        label: \"Stock Price\",\r\n                        data: y,\r\n                        fill: true,\r\n                        lineTension: 0.1,\r\n                        backgroundColor: lowOrHighColor,\r\n                        borderColor: lowOrHighColor,\r\n                        borderCapStyle: \"butt\",\r\n                        borderJoinStyle: \"miter\",\r\n                        pointBorderColor: lowOrHighColor,\r\n                        pointBackgroundColor: lowOrHighColor,\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 5,\r\n                        pointHoverBackgroundColor: lowOrHighColor,\r\n                        pointHoverBorderColor: lowOrHighColor,\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 2,\r\n                        pointHitRadius: 10,\r\n                      },\r\n                    ],\r\n                  },\r\n                });\r\n              \r\n  \r\n            })\r\n            .catch(error => {\r\n    console.log(error.response)\r\n});\r\n        }\r\n        else if(pP.dates!=this.props.dates){\r\n          if (this.props.alter_Graph===false){\r\n            var startDate = Math.round(new Date().getTime() / 1000);\r\n            var endDate = startDate - (72 * 3600);\r\n            \r\n          }\r\n          else{\r\n            var startDate = this.props.dates.endDate;\r\n            var endDate = this.props.dates.startDate;\r\n          }\r\n          const pointerToThis = this;\r\n        axios.get('https://finnhub.io/api/v1/stock/candle',{\r\n            \r\n          params:{\r\n              symbol: this.props.currentStockCode,\r\n              resolution: 5,\r\n              from: endDate,\r\n              to: startDate,\r\n              token: 'bu5pnnf48v6qku34c7vg'\r\n\r\n          }})\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            if (response.data.s==\"no_data\")\r\n            {\r\n              // const alert = useAlert();\r\n              alert('No Data Currently Available. Markets are closed during weekends and public holidays. Please filter by previous date.');\r\n            }\r\n            else{\r\n              var unix_time = response.data.t;\r\n              var i;\r\n              var x=[];\r\n              for (i = 0; i < unix_time.length; i++) \r\n              {\r\n                var time = moment.unix(unix_time[i]).format(\"YYYY-MM-DD HH:mm\");\r\n                x.push(time)\r\n              }\r\n              var text='between '+String(x[0]).slice(0,10)+' to '+String(x[x.length-1].slice(0,10))\r\n              var y = response.data.c;\r\n              var lowOrHighColor = y[0] < y[y.length - 1] \r\n                ? '#81b737' : '#d54f4f';\r\n              this.setState({\r\n                text: text,\r\n                symbol: this.props.currentStockCode,\r\n                Data: {\r\n                  labels: x,\r\n                  datasets: [\r\n                    {\r\n                      label: \"Stock Price\",\r\n                      data: y,\r\n                      fill: true,\r\n                      lineTension: 0.1,\r\n                      backgroundColor: lowOrHighColor,\r\n                      borderColor: lowOrHighColor,\r\n                      borderCapStyle: \"butt\",\r\n                      borderJoinStyle: \"miter\",\r\n                      pointBorderColor: lowOrHighColor,\r\n                      pointBackgroundColor: lowOrHighColor,\r\n                      pointBorderWidth: 1,\r\n                      pointHoverRadius: 5,\r\n                      pointHoverBackgroundColor: lowOrHighColor,\r\n                      pointHoverBorderColor: lowOrHighColor,\r\n                      pointHoverBorderWidth: 2,\r\n                      pointRadius: 2,\r\n                      pointHitRadius: 10,\r\n                    },\r\n                  ],\r\n                },\r\n              });\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.log(error.response)\r\n            });\r\n        }\r\n\r\n      }\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"graphClass\">\r\n                <h5>Price per share of {this.state.symbol} {this.state.text} </h5>\r\n                <Line\r\n                data={this.state.Data}\r\n                height={300}\r\n                width ={400}\r\n                options={{\r\n                  layout:{\r\n                    padding:{\r\n                      right : 20 \r\n                    }\r\n                  },\r\n                  responsive: true,\r\n                  maintainAspectRatio: false,\r\n    \r\n                  scales: {\r\n                    xAxes: [{\r\n                      gridLines: {\r\n                         display: false\r\n                      },\r\n                      ticks: {\r\n                        display: false //this will remove only the label\r\n                      },\r\n                      scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time',\r\n                        fontColor: 'rgb(0, 35, 80)',\r\n                        fontfamily: 'New Century Schoolbook, TeX Gyre Schola, serif',\r\n                        fontSize: 12\r\n                      }\r\n                   }],\r\n                    yAxes: [{\r\n                      gridLines: {\r\n                         display: false,\r\n                         \r\n                      },\r\n                      scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Stock Price ($)',\r\n                        fontColor: 'rgb(0, 35, 80)',\r\n                        fontfamily: 'New Century Schoolbook, TeX Gyre Schola, serif',\r\n                        fontSize: 12\r\n                      },\r\n                      ticks: {\r\n                        display: true,\r\n                        fontColor: 'black'\r\n\r\n                   }\r\n                  }\r\n                ],\r\n                  },\r\n                  legend: {\r\n                      display: true,\r\n                      position: 'top',\r\n                    labels: {\r\n                      fontColor: 'rgb(0, 35, 80)',\r\n                      fontSize: 12,\r\n                      fontfamily: 'New Century Schoolbook, TeX Gyre Schola, serif',\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n\r\n        );\r\n    };\r\n}\r\nexport default GraphBox;","import React from 'react';\r\nimport axios from 'axios';\r\n// import './InputBox.css';\r\n\r\nclass FilterBox extends React.Component{\r\n    filter = () =>{\r\n    if (document.getElementById('startdate').value && document.getElementById('enddate').value){\r\n    // document.getElementById('startdate').value = new Date().toDateInputValue();\r\n    let stock_code = document.querySelector(\".filter-select\").value;\r\n    let startDate = new Date(document.querySelector(\"input.start-date\").value)/1000;\r\n    let endDate = new Date(document.querySelector(\"input.end-date\").value)/1000 + 36000;\r\n    console.log(endDate);\r\n    let currentTime = Math.round(new Date().getTime() / 1000)\r\n    console.log(currentTime);\r\n    if ((currentTime>startDate) && (currentTime>endDate) && (startDate<=endDate)){\r\n        this.props.filterData(true, {stock_code:stock_code, startDate: startDate, endDate: endDate});\r\n        console.log(startDate);\r\n        console.log(endDate);\r\n    }\r\n    else{\r\n        document.querySelector(\"input.start-date\").value = '';\r\n        document.querySelector(\"input.end-date\").value = '';\r\n        alert('please enter valid Start and End date');\r\n    }\r\n    \r\n    \r\n    }\r\n    else{\r\n        alert('please enter Start and End date');\r\n    }\r\n}\r\n\r\n    render(){\r\n        let DOM = '';\r\n        // console.log(this.props.dict_codes);\r\n        DOM = this.props.dict_codes.map((item, index) => {\r\n            return (\r\n                <option \r\n                    value={ item.stock_value } \r\n                    key={ index }\r\n                    defaultValue={ item.stock_value } >\r\n                        { item.stock_value }\r\n                </option>\r\n            )\r\n        });\r\n        return (\r\n            \r\n                <div className=\"form-group\">\r\n                    <select className=\"custom-select filter-select\" id='select' aria-label=\"Search\">\r\n                        { DOM }\r\n                    </select>\r\n                    <div className=\"d-flex filter-card-date mt-2\">\r\n                        <div className=\"filter-card-date-div\">\r\n                            <label className=\"mb-0\">Start Date:</label>\r\n                            <input className=\"form-control start-date\" aria-label=\"Search\" type=\"date\" id='startdate' ></input>\r\n                        </div>\r\n                        <div className=\"filter-card-date-div\">\r\n                            <label className=\"mb-0\">End Date:</label>\r\n                            <input className=\"form-control end-date\" aria-label=\"Search\" type=\"date\" id='enddate'></input>\r\n                        </div>\r\n                    </div>\r\n                    <button id='filterbutton' className=\"btn btn-secondary w-100 mt-3 btn-filter\" onClick={ this.filter }>Filter</button>\r\n\r\n                </div>\r\n                // <div class=\"row\">\r\n                //     <div class=\"col-md-9\">\r\n                //     <select class=\"form-group custom-select filter-select\">\r\n                //         {DOM}\r\n                //     </select>\r\n                //     <div class=\"d-flex filter-card-date mt-2\">\r\n                //         <div class=\"filter-card-date-div\">\r\n                //             <label class=\"mb-0\">Start Date:</label>\r\n                //             <input class=\"form-control start-date\" type=\"date\" id='startdate' ></input>\r\n                //         </div>\r\n                //         <div class=\"filter-card-date-div\">\r\n                //             <label class=\"mb-0\">End Date:</label>\r\n                //             <input class=\"form-control end-date\" type=\"date\" id='enddate'></input>\r\n                //         </div>\r\n                //     </div>\r\n                //     <button class=\"btn btn-secondary w-100 mt-3 btn-filter\" onClick={ this.filter }>Filter</button>\r\n\t\t\t\t// \t</div>\r\n\r\n                // </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterBox;","import React from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport './News.css';\r\n\r\nclass News extends React.Component{\r\n    // constructor(props){\r\n    //     super(props);\r\n    // }\r\n    state ={\r\n\r\n        Data: \"**Provide a company stock ticker for latest news**\"\r\n\r\n\r\n    }  \r\n    \r\n    componentDidUpdate(pP){\r\n        if(pP.currentStockCode != this.props.currentStockCode){\r\n            console.log(this.props.currentStockCode);\r\n            let startDate = Math.round(new Date().getTime() / 1000);\r\n            let endDate = startDate - (72 * 3600);\r\n            startDate = moment.unix(startDate).format(\"YYYY MMM DD\");\r\n            var arr1 = startDate.split(\" \");\r\n            var startmm = moment().month(arr1[1]).format(\"MM\");\r\n\r\n            startDate = arr1[0] + \"-\"+startmm+ \"-\"+arr1[2];\r\n            \r\n            endDate = moment.unix(endDate).format(\"YYYY MMM DD\")\r\n            var arr2 = endDate.split(\" \");\r\n            \r\n            var endmm = moment().month(arr2[1]).format(\"MM\");\r\n        \r\n            endDate = arr2[0] + \"-\"+endmm+ \"-\"+arr2[2];\r\n            \r\n                    \r\n            axios.get('https://finnhub.io/api/v1/company-news',{\r\n                params:{\r\n                    symbol: this.props.currentStockCode,\r\n                    from: endDate,\r\n                    to: startDate,\r\n                    token: 'bu5pnnf48v6qku34c7vg'\r\n\r\n                }})\r\n            .then((response) => {\r\n                // console.log(response.data[0].headline);\r\n                var headlines = \"\";\r\n                for(var i=0 ;i<response.data.length;i++){\r\n                    headlines += response.data[i].headline + '.';\r\n                    \r\n                }\r\n                // console.log(headlines);\r\n                this.setState({Data : headlines},() =>{\r\n\r\n                })\r\n                \r\n\r\n            })\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n   \r\n    render(){\r\n        \r\n        return (\r\n            <div className=\"container footer\">\r\n                \r\n                        <div className=\"d-flex breaking-news\">\r\n                            <div id=\"ticker\" className=\"ticker d-flex news\"><span className=\"d-flex align-items-center\">&nbsp;NEWS</span></div>\r\n                                <marquee className=\"news-scroll\" behavior=\"scroll\" direction=\"left\"> <a href=\"#\"> {this.state.Data}</a> </marquee>\r\n                        </div>\r\n                        \r\n                    \r\n               \r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default News;","export default __webpack_public_path__ + \"static/media/wave.d833e2ab.mp4\";","import React from 'react';\r\nimport InputBox from './InputBox';\r\nimport TableBox from './TableBox';\r\nimport GraphBox from './GraphBox';\r\nimport FilterBox from './FilterBox';\r\nimport News from './News';\r\n// import BackgroundVideo from './BackgroundVideo';\r\nimport './App.css';\r\nimport video from './wave.mp4';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    videoSource : video,\r\n    table_Values: [],\r\n    graphData: [],\r\n    currentStockCode: '',\r\n    showFilterDOM: false,\r\n    showFilterData: false,\r\n    show_Table: false,\r\n    showGraph: false,  \r\n    alter_Graph: false,\r\n    dict_codes: []\r\n\r\n  };\r\n  // getResults = (data) => {\r\n  //   if(data !== \"Symbol not supported\"){\r\n  //       this.setState({ \r\n  //         table_Values: this.state.table_Values.concat(data),\r\n  //           showFilterDOM: true,\r\n  //           show_Table: true\r\n  //       });\r\n  //       console.log(this.state.table_Values);\r\n  //   };\r\n  // };\r\n  getResults = (code, data) => {\r\n    if(data.response !== \"Symbol not supported\"){\r\n        this.setState({ \r\n          table_Values: this.state.table_Values.concat(data.response),\r\n          currentStockCode: data.stockcode,\r\n          dict_codes: this.state.dict_codes.concat({stock_value: data.stockcode}),\r\n            showFilterDOM: true,\r\n            show_Table: true,\r\n            showGraph: true,\r\n            alter_Graph: false\r\n        }, ()=>{\r\n          console.log(this.state.dict_codes);\r\n          console.log(this.state.alter_Graph);\r\n\r\n        });\r\n        \r\n    };\r\n  };\r\n\r\n  filterData = (code, dates) => {\r\n        console.log(dates);\r\n        this.setState({ \r\n          dates: dates,\r\n          currentStockCode: dates.stock_code,\r\n          alter_Graph: true,\r\n          show_Table: true,\r\n          showGraph: true\r\n        }, ()=>{\r\n          console.log(this.state.currentStockCode);\r\n          console.log(this.state.dates);\r\n\r\n        });\r\n        console.log(this.state.dates);\r\n  };\r\n  \r\n  getGraphResults = (code, graph_data) =>{\r\n    console.log(code);\r\n    console.log(graph_data);\r\n    this.setState({\r\n      graphData: graph_data\r\n    });\r\n  }\r\n  render(){\r\n    return (\r\n      <div>\r\n            <video autoPlay=\"autoplay\" loop=\"loop\" muted  >\r\n                <source src={this.state.videoSource} type=\"video/mp4\" />\r\n                Your browser does not support the video tag.\r\n            </video>\r\n        <div className=\"heading-container\">         \r\n              <h1 className=\"pageheading\">Stock Price Dashboard</h1>\r\n        </div>\r\n        <div className=\"input-container\">\r\n            <InputBox \r\n              getResults = { this.getResults }>\r\n            </InputBox>\r\n        </div> \r\n        <div className={ this.state.showFilterDOM ? \"filter-container\" : \"hidden-table-container\" } >          \r\n          <FilterBox\r\n            currentStockCode = {this.state.currentStockCode}\r\n            filterData = {this.filterData}\r\n            dict_codes = {this.state.dict_codes}>\r\n          </FilterBox>        \r\n        </div>\r\n        <div className={ this.state.show_Table ? \"graph-container\" : \"hidden-table-container\" } tabindex=\"0\" >\r\n                <GraphBox\r\n                currentStockCode = {this.state.currentStockCode} \r\n                dates = {this.state.dates} \r\n                alter_Graph={this.state.alter_Graph}\r\n                >\r\n                </GraphBox>                \r\n        </div>\r\n        <div className={ this.state.show_Table ? \"table-container\" : \"hidden-table-container\" } tabindex=\"0\">     \r\n                <TableBox \r\n                show_Table = { this.state.show_Table }\r\n                table_Values = { this.state.table_Values }\r\n                >\r\n                </TableBox>          \r\n        </div>       \r\n        <News \r\n            currentStockCode = {this.state.currentStockCode}>\r\n        </News>\r\n      </div>     \r\n    );\r\n  } \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}